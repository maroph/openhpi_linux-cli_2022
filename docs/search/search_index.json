{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"openHPI Kurs Linux in der Kommandozeile Vom 9. Februar 2022 bis 2. M\u00e4rz 2022 l\u00e4uft der openHPI Kurs Linux in der Kommandozeile . Diese Site ist meine Begleitseite zu diesem Kurs.","title":"Home"},{"location":"index.html#openhpi-kurs-linux-in-der-kommandozeile","text":"Vom 9. Februar 2022 bis 2. M\u00e4rz 2022 l\u00e4uft der openHPI Kurs Linux in der Kommandozeile . Diese Site ist meine Begleitseite zu diesem Kurs.","title":"openHPI Kurs Linux in der Kommandozeile"},{"location":"info/about.html","text":"\u00dcber diese Site Der gesamte Inhalt dieser Site (HTML und Skripte) ist abgelegt in meinem GitHub Repository . Benutzte Linux Versionen F\u00fcr meine Beispiele habe ich die folgenden Linux Versionen benutzt: Debian 11.2 on WSL (Windows Subsystem for Linux) echo $BASH_VERSION 5 .1.4 ( 1 ) -release Raspberry Pi OS 10.11 echo $BASH_VERSION 5 .0.3 ( 1 ) -release Struktur der Site Die Daten auf dieser Site sind folgenderma\u00dfen strukturiert: docs Inhalt dieser Site docs-src Markdown Sourcen dieser Site LICENSE Lizenz des Repositories (CC-BY 4.0) README.md Readme Datei des Repositories mkdocs.yml MkDocs Konfigurationsdatei MkDocs Virtual Environment F\u00fcr MkDocs verwende ich das folgende Virtual Environment: python3 -m venv venv source venv/bin/activate python -m pip install --upgrade pip python -m pip install --upgrade setuptools python -m pip install --upgrade wheel python -m pip install --upgrade mkdocs python -m pip install --upgrade mkdocs-material python -m pip install --upgrade mkdocs-git-revision-date-plugin Sollte das Modul venv nicht installiert sein, muss man das Package python3-venv installieren. Auf Debian/Ubuntu/Raspbian geht das mit dem folgenden Kommando sudo apt install python3-venv Lokale Erzeugung der Site ./build Ver\u00f6ffentlichung der Site F\u00fcr mein GitHub Repository habe ich die GitHub Page https://maroph.github.io/openhpi_linux-cli_2022/ konfiguriert. F\u00fcr diese GitHub Page werden die Daten aus dem Verzeichnis docs im Branch main verwendet. Um diese Page zu aktualisieren, muss man die \u00c4nderungen im lokalen Git Repository committen und in das GitHub Repository pushen: git commit -m \"my commit message\" git push Nach einer relativ kurzen Zeit sind die \u00c4nderungen auf der GitHub Page zu sehen.","title":"\u00dcber"},{"location":"info/about.html#uber-diese-site","text":"Der gesamte Inhalt dieser Site (HTML und Skripte) ist abgelegt in meinem GitHub Repository .","title":"\u00dcber diese Site"},{"location":"info/about.html#benutzte-linux-versionen","text":"F\u00fcr meine Beispiele habe ich die folgenden Linux Versionen benutzt: Debian 11.2 on WSL (Windows Subsystem for Linux) echo $BASH_VERSION 5 .1.4 ( 1 ) -release Raspberry Pi OS 10.11 echo $BASH_VERSION 5 .0.3 ( 1 ) -release","title":"Benutzte Linux Versionen"},{"location":"info/about.html#struktur-der-site","text":"Die Daten auf dieser Site sind folgenderma\u00dfen strukturiert: docs Inhalt dieser Site docs-src Markdown Sourcen dieser Site LICENSE Lizenz des Repositories (CC-BY 4.0) README.md Readme Datei des Repositories mkdocs.yml MkDocs Konfigurationsdatei","title":"Struktur der Site"},{"location":"info/about.html#mkdocs-virtual-environment","text":"F\u00fcr MkDocs verwende ich das folgende Virtual Environment: python3 -m venv venv source venv/bin/activate python -m pip install --upgrade pip python -m pip install --upgrade setuptools python -m pip install --upgrade wheel python -m pip install --upgrade mkdocs python -m pip install --upgrade mkdocs-material python -m pip install --upgrade mkdocs-git-revision-date-plugin Sollte das Modul venv nicht installiert sein, muss man das Package python3-venv installieren. Auf Debian/Ubuntu/Raspbian geht das mit dem folgenden Kommando sudo apt install python3-venv","title":"MkDocs Virtual Environment"},{"location":"info/about.html#lokale-erzeugung-der-site","text":"./build","title":"Lokale Erzeugung der Site"},{"location":"info/about.html#veroffentlichung-der-site","text":"F\u00fcr mein GitHub Repository habe ich die GitHub Page https://maroph.github.io/openhpi_linux-cli_2022/ konfiguriert. F\u00fcr diese GitHub Page werden die Daten aus dem Verzeichnis docs im Branch main verwendet. Um diese Page zu aktualisieren, muss man die \u00c4nderungen im lokalen Git Repository committen und in das GitHub Repository pushen: git commit -m \"my commit message\" git push Nach einer relativ kurzen Zeit sind die \u00c4nderungen auf der GitHub Page zu sehen.","title":"Ver\u00f6ffentlichung der Site"},{"location":"info/license.html","text":"Lizenz Die Daten auf dieser Site sind lizenziert unter einer Creative Commons Namensnennung 4.0 International Lizenz Die Inhalte des openHPI Linux Kurses wurden vom openHPI Kurs Team erstellt und sind lizenziert unter einer Creative Commons Namensnennung - Nicht-kommerziell - Weitergabe unter gleichen Bedingungen 4.0 International Lizenz","title":"Lizenz"},{"location":"info/license.html#lizenz","text":"Die Daten auf dieser Site sind lizenziert unter einer Creative Commons Namensnennung 4.0 International Lizenz Die Inhalte des openHPI Linux Kurses wurden vom openHPI Kurs Team erstellt und sind lizenziert unter einer Creative Commons Namensnennung - Nicht-kommerziell - Weitergabe unter gleichen Bedingungen 4.0 International Lizenz","title":"Lizenz"},{"location":"info/sources.html","text":"Quellenreferenz Diese Site wurde mit MkDocs erstellt. Zus\u00e4tzlich habe ich das Theme Material for MkDocs und das Plugin mkdocs-git-revision-date-plugin verwendet. Das von mir verwendete Linux Logo ist einer verkleinerte Version der Datei \"Linux Logo\" von laboratoriolinux und ist lizenziert unter CC BY-NC-SA 2.0","title":"Quellen"},{"location":"info/sources.html#quellenreferenz","text":"Diese Site wurde mit MkDocs erstellt. Zus\u00e4tzlich habe ich das Theme Material for MkDocs und das Plugin mkdocs-git-revision-date-plugin verwendet. Das von mir verwendete Linux Logo ist einer verkleinerte Version der Datei \"Linux Logo\" von laboratoriolinux und ist lizenziert unter CC BY-NC-SA 2.0","title":"Quellenreferenz"},{"location":"samples/bash_arrays.html","text":"Bash: Arrays Anlegen eines Arrays Anlegen eines leeren Arrays declare -a array Anlegen eines vorbelegten Arrays declare -a arrayPre =( wert1 wert2 wert3 wert4 ) Werte an ein Array anh\u00e4ngen array +=( \"wert1\" ) array +=( \"wert2\" ) array +=( \"wert3\" ) array +=( \"wert4\" ) Zugriff auf ein Element mit Index Das erste Element in einem Bash Array hat den Index 0. echo \" ${ array [0] } \" echo \" ${ array [1] } \" Einer Wert mit Index setzen array [ 1 ]= \"wert2_neu\" echo \" ${ array [1] } \" array [ 5 ]= \"wert5\" echo \" ${ array [5] } \" Was ist der Wert vom Element mit dem nicht belegtem Index 4 ? echo \" ${ array [4] } \" Da dem Array mit dem Index 4 noch kein Wert zugewiesen wurde, wird der Ausdruck ${array[4]} zu einem Leerstring expandiert L\u00e4nge eines Arrays echo \"L\u00e4nge des Arrays array : ${# array [@] } \" echo \"L\u00e4nge des Arrays arrayPre : ${# arrayPre [@] } \" Array kopieren array2 =( \" ${ array [@] } \" ) Array konkatenieren array3 =( \" ${ array [@] } \" \" ${ array2 [@] } \" ) Teilbereich (von/bis) eines Arrays ausgeben echo \" ${ array [@]: 1 : 4 } \" Es werden die Werte mit dem Index 1-3 ausgegeben. Der erste Wert (1) gibt an, ab welchem Index die Ausgabe bebinnt und der zweite Wert (4) gibt den ersten Index an, dessen Wert nicht mehr ausgegeben werden soll. Ausgabe des gesamten Arrays echo \" ${ array [@] } \" Werte bei der Ausgabe ersetzen echo \" ${ array [@]/wert/value } \" Dieser Ausdruck gibt alle Werte des Array aus. Dabei wird der String \"wert\" durch den String \"value\" ersetzt. Iteration \u00fcber ein Array for wert in \" ${ array [@] } \" do echo \"Wert : ${ wert } \" done Pr\u00fcfen, ob ein Wert im Array enthalten ist if [[ \" ${ array [@] } \" = ~ \" wert1 \" ]] then echo \"der Wert wert1 ist im Array array enthalten\" fi Pr\u00fcfen, ob ein Wert nicht im Array enthalten ist if [[ ! \" ${ array [@] } \" = ~ \" wertNONE \" ]] then echo \"der Wert wertNone ist im Array array NICHT enthalten\" fi L\u00f6schen eines Elementes aus einem Array unset array [ 5 ] L\u00f6schen eines Arrays unset array Zeilenweises Einlesen einer Datei in ein Array Diesen Code habe ich in der BashFAQ/005 im Kapitel \"2.1. Loading lines from a file or stream\" gefunden. mapfile -t array < ./tmp.txt echo \"Anzahl gelesener Zeilen: \\${#array[@]}: ${# array [@] } \" for line in \" ${ array [@] } \" do echo \">>>>> ${ line } \" done Ein Skript, dass alle hier beschriebene Operationen ausf\u00fchrt, findet man hier: bash_arrays.bash","title":"Bash Arrays"},{"location":"samples/bash_arrays.html#bash-arrays","text":"","title":"Bash: Arrays"},{"location":"samples/bash_arrays.html#anlegen-eines-arrays","text":"","title":"Anlegen eines Arrays"},{"location":"samples/bash_arrays.html#anlegen-eines-leeren-arrays","text":"declare -a array","title":"Anlegen eines leeren Arrays"},{"location":"samples/bash_arrays.html#anlegen-eines-vorbelegten-arrays","text":"declare -a arrayPre =( wert1 wert2 wert3 wert4 )","title":"Anlegen eines vorbelegten Arrays"},{"location":"samples/bash_arrays.html#werte-an-ein-array-anhangen","text":"array +=( \"wert1\" ) array +=( \"wert2\" ) array +=( \"wert3\" ) array +=( \"wert4\" )","title":"Werte an ein Array anh\u00e4ngen"},{"location":"samples/bash_arrays.html#zugriff-auf-ein-element-mit-index","text":"Das erste Element in einem Bash Array hat den Index 0. echo \" ${ array [0] } \" echo \" ${ array [1] } \"","title":"Zugriff auf ein Element mit Index"},{"location":"samples/bash_arrays.html#einer-wert-mit-index-setzen","text":"array [ 1 ]= \"wert2_neu\" echo \" ${ array [1] } \" array [ 5 ]= \"wert5\" echo \" ${ array [5] } \" Was ist der Wert vom Element mit dem nicht belegtem Index 4 ? echo \" ${ array [4] } \" Da dem Array mit dem Index 4 noch kein Wert zugewiesen wurde, wird der Ausdruck ${array[4]} zu einem Leerstring expandiert","title":"Einer Wert mit Index setzen"},{"location":"samples/bash_arrays.html#lange-eines-arrays","text":"echo \"L\u00e4nge des Arrays array : ${# array [@] } \" echo \"L\u00e4nge des Arrays arrayPre : ${# arrayPre [@] } \"","title":"L\u00e4nge eines Arrays"},{"location":"samples/bash_arrays.html#array-kopieren","text":"array2 =( \" ${ array [@] } \" )","title":"Array kopieren"},{"location":"samples/bash_arrays.html#array-konkatenieren","text":"array3 =( \" ${ array [@] } \" \" ${ array2 [@] } \" )","title":"Array konkatenieren"},{"location":"samples/bash_arrays.html#teilbereich-vonbis-eines-arrays-ausgeben","text":"echo \" ${ array [@]: 1 : 4 } \" Es werden die Werte mit dem Index 1-3 ausgegeben. Der erste Wert (1) gibt an, ab welchem Index die Ausgabe bebinnt und der zweite Wert (4) gibt den ersten Index an, dessen Wert nicht mehr ausgegeben werden soll.","title":"Teilbereich (von/bis) eines Arrays ausgeben"},{"location":"samples/bash_arrays.html#ausgabe-des-gesamten-arrays","text":"echo \" ${ array [@] } \"","title":"Ausgabe des gesamten Arrays"},{"location":"samples/bash_arrays.html#werte-bei-der-ausgabe-ersetzen","text":"echo \" ${ array [@]/wert/value } \" Dieser Ausdruck gibt alle Werte des Array aus. Dabei wird der String \"wert\" durch den String \"value\" ersetzt.","title":"Werte bei der Ausgabe ersetzen"},{"location":"samples/bash_arrays.html#iteration-uber-ein-array","text":"for wert in \" ${ array [@] } \" do echo \"Wert : ${ wert } \" done","title":"Iteration \u00fcber ein Array"},{"location":"samples/bash_arrays.html#prufen-ob-ein-wert-im-array-enthalten-ist","text":"if [[ \" ${ array [@] } \" = ~ \" wert1 \" ]] then echo \"der Wert wert1 ist im Array array enthalten\" fi","title":"Pr\u00fcfen, ob ein Wert im Array enthalten ist"},{"location":"samples/bash_arrays.html#prufen-ob-ein-wert-nicht-im-array-enthalten-ist","text":"if [[ ! \" ${ array [@] } \" = ~ \" wertNONE \" ]] then echo \"der Wert wertNone ist im Array array NICHT enthalten\" fi","title":"Pr\u00fcfen, ob ein Wert nicht im Array enthalten ist"},{"location":"samples/bash_arrays.html#loschen-eines-elementes-aus-einem-array","text":"unset array [ 5 ]","title":"L\u00f6schen eines Elementes aus einem Array"},{"location":"samples/bash_arrays.html#loschen-eines-arrays","text":"unset array","title":"L\u00f6schen eines Arrays"},{"location":"samples/bash_arrays.html#zeilenweises-einlesen-einer-datei-in-ein-array","text":"Diesen Code habe ich in der BashFAQ/005 im Kapitel \"2.1. Loading lines from a file or stream\" gefunden. mapfile -t array < ./tmp.txt echo \"Anzahl gelesener Zeilen: \\${#array[@]}: ${# array [@] } \" for line in \" ${ array [@] } \" do echo \">>>>> ${ line } \" done Ein Skript, dass alle hier beschriebene Operationen ausf\u00fchrt, findet man hier: bash_arrays.bash","title":"Zeilenweises Einlesen einer Datei in ein Array"},{"location":"samples/bash_assoziative_arrays.html","text":"Bash: Assoziative Arrays Anlegen eines Arrays Anlegen eines leeren Arrays declare -A aArray Anlegen eines vorbelegten Arrays declare -A aArrayPre =( [ key1 ]= val1 [ key2 ]= val2 [ key3 ]= val3 ) Key/Value Paare zu einem Array hinzuf\u00fcgen aArray [ \"key1\" ]= \"value1\" aArray [ \"key2\" ]= \"value2\" Zugriff auf ein Element mit dem Schl\u00fcssel (key) echo \" ${ aArray [ \"key1\" ] } \" echo \" ${ aArray [ \"key2\" ] } \" L\u00e4nge eines Arrays echo \"L\u00e4nge des Arrays aArray : ${# aArray [@] } \" Iteration \u00fcber den Schl\u00fcssel (key) for key in \" ${ !aArray[@] } \" do echo \"key : ${ key } \" echo \"key : ${ key } , value: ${ aArray [ ${ key } ] } \" done Iteration \u00fcber den Wert (value) for value in \" ${ aArray [@] } \" do echo \"value: ${ value } \" done Pr\u00fcfen, ob ein Schl\u00fcssel (key) im Array enthalten ist if [ ${ aArray [key1]+_ } ] then echo \"key1 gefunden\" fi Pr\u00fcfen, ob ein Schl\u00fcssel (key) im Array nicht enthalten ist if [ ! ${ aArray [keyNONE]+_ } ] then echo \"keyNONE nicht gefunden\" fi L\u00f6schen eines Schl\u00fcssels aus einem Array unset aArray [ key1 ] L\u00f6schen eines Arrays unset aArray Ein Skript, dass alle hier beschriebene Operationen ausf\u00fchrt, findet man hier: bash_aArrays.bash","title":"Bash Assoziative Arrays"},{"location":"samples/bash_assoziative_arrays.html#bash-assoziative-arrays","text":"","title":"Bash: Assoziative Arrays"},{"location":"samples/bash_assoziative_arrays.html#anlegen-eines-arrays","text":"","title":"Anlegen eines Arrays"},{"location":"samples/bash_assoziative_arrays.html#anlegen-eines-leeren-arrays","text":"declare -A aArray","title":"Anlegen eines leeren Arrays"},{"location":"samples/bash_assoziative_arrays.html#anlegen-eines-vorbelegten-arrays","text":"declare -A aArrayPre =( [ key1 ]= val1 [ key2 ]= val2 [ key3 ]= val3 )","title":"Anlegen eines vorbelegten Arrays"},{"location":"samples/bash_assoziative_arrays.html#keyvalue-paare-zu-einem-array-hinzufugen","text":"aArray [ \"key1\" ]= \"value1\" aArray [ \"key2\" ]= \"value2\"","title":"Key/Value Paare zu einem Array hinzuf\u00fcgen"},{"location":"samples/bash_assoziative_arrays.html#zugriff-auf-ein-element-mit-dem-schlussel-key","text":"echo \" ${ aArray [ \"key1\" ] } \" echo \" ${ aArray [ \"key2\" ] } \"","title":"Zugriff auf ein Element mit dem Schl\u00fcssel (key)"},{"location":"samples/bash_assoziative_arrays.html#lange-eines-arrays","text":"echo \"L\u00e4nge des Arrays aArray : ${# aArray [@] } \"","title":"L\u00e4nge eines Arrays"},{"location":"samples/bash_assoziative_arrays.html#iteration-uber-den-schlussel-key","text":"for key in \" ${ !aArray[@] } \" do echo \"key : ${ key } \" echo \"key : ${ key } , value: ${ aArray [ ${ key } ] } \" done","title":"Iteration \u00fcber den Schl\u00fcssel (key)"},{"location":"samples/bash_assoziative_arrays.html#iteration-uber-den-wert-value","text":"for value in \" ${ aArray [@] } \" do echo \"value: ${ value } \" done","title":"Iteration \u00fcber den Wert (value)"},{"location":"samples/bash_assoziative_arrays.html#prufen-ob-ein-schlussel-key-im-array-enthalten-ist","text":"if [ ${ aArray [key1]+_ } ] then echo \"key1 gefunden\" fi","title":"Pr\u00fcfen, ob ein Schl\u00fcssel (key) im Array enthalten ist"},{"location":"samples/bash_assoziative_arrays.html#prufen-ob-ein-schlussel-key-im-array-nicht-enthalten-ist","text":"if [ ! ${ aArray [keyNONE]+_ } ] then echo \"keyNONE nicht gefunden\" fi","title":"Pr\u00fcfen, ob ein Schl\u00fcssel (key) im Array nicht enthalten ist"},{"location":"samples/bash_assoziative_arrays.html#loschen-eines-schlussels-aus-einem-array","text":"unset aArray [ key1 ]","title":"L\u00f6schen eines Schl\u00fcssels aus einem Array"},{"location":"samples/bash_assoziative_arrays.html#loschen-eines-arrays","text":"","title":"L\u00f6schen eines Arrays"},{"location":"samples/bash_assoziative_arrays.html#unset-aarray","text":"Ein Skript, dass alle hier beschriebene Operationen ausf\u00fchrt, findet man hier: bash_aArrays.bash","title":"unset aArray\n"},{"location":"samples/bash_variables.html","text":"Bash: Strings \u00dcber Bash Variablen gibt es sehr viel zu sagen. Ich gebe deshalb hier nur einige Beispiele an, die ich des \u00f6fteren verwende. Variable einen Wert zuweisen und ausgeben msg = \"Hello World!\" echo \" $msg \" L\u00e4nge der Zeichenkette in einer Variablen: ${#msg} echo ${# msg } Bilden eines Teilstrings echo \" ${ msg : 0 : 2 } \" Es werden die Werte mit dem Index 0-1 ausgegeben. Der erste Wert (1) gibt an, ab welchem Index die Ausgabe bebinnt und der zweite Wert (2) gibt den ersten Index an, dessen Wert nicht mehr ausgegeben werden soll. Ist Teilstring in einem String enthalten string = 'A long string' if [[ $string == * \"A long\" * ]] then echo \"'A long' is part of the string\" fi string = 'A long string' if [[ $string ! = * \"A short\" * ]] then echo \"'A short' is not part of the string\" fi Ausgabe eines Programms in einer Variablen speichern issue = ` cat /etc/issue ` echo \" $issue \" Ausgabe eines Programms in einer Variablen speichern issue = $( cat /etc/issue ) echo \" $issue \" Erstes Zeichen in einen Gro\u00dfbuchstaben umwandeln echo ${ msg ^ } Alle Kleinbuchstaben in Gro\u00dfbuchstaben umwandeln echo ${ msg ^^ } Alternative Methode: Alle Kleinbuchstaben in Gro\u00dfbuchstaben umwandeln echo $uuid | tr '[:lower:]' '[:upper:]' Erstes Zeichen in einen Kleinbuchstaben umwandeln echo ${ msg , } Alle Gro\u00dfbuchstaben in Kleinbuchstaben umwandeln echo ${ msg ,, } Alternative Methode: Alle Gro\u00dfbuchstaben in Kleinbuchstaben umwandeln echo $msg | tr '[:upper:]' '[:lower:]' Pr\u00fcfen, ob eine Variable eine positive Zahl ohne Vorzeichen + enth\u00e4lt declare -a inp =( a -1 0 +1 1 ) for n in ${ inp [@] } do if ! [[ \" $n \" = ~ ^ [ 1 -9 ][ 0 -9 ] *$ ]] then echo \" $n - keine positive Zahl Zahl ohne Vorzeichen +\" else echo \" $n - positive Zahl Zahl ohne Vorzeichen +\" fi done Ein Skript, dass alle hier beschriebene Operationen ausf\u00fchrt, findet man hier: bash_variables.bash","title":"Bash Variablen"},{"location":"samples/bash_variables.html#bash-strings","text":"\u00dcber Bash Variablen gibt es sehr viel zu sagen. Ich gebe deshalb hier nur einige Beispiele an, die ich des \u00f6fteren verwende.","title":"Bash: Strings"},{"location":"samples/bash_variables.html#variable-einen-wert-zuweisen-und-ausgeben","text":"msg = \"Hello World!\" echo \" $msg \"","title":"Variable einen Wert zuweisen und ausgeben"},{"location":"samples/bash_variables.html#lange-der-zeichenkette-in-einer-variablen-msg","text":"echo ${# msg }","title":"L\u00e4nge der Zeichenkette in einer Variablen: ${#msg}"},{"location":"samples/bash_variables.html#bilden-eines-teilstrings","text":"echo \" ${ msg : 0 : 2 } \" Es werden die Werte mit dem Index 0-1 ausgegeben. Der erste Wert (1) gibt an, ab welchem Index die Ausgabe bebinnt und der zweite Wert (2) gibt den ersten Index an, dessen Wert nicht mehr ausgegeben werden soll.","title":"Bilden eines Teilstrings"},{"location":"samples/bash_variables.html#ist-teilstring-in-einem-string-enthalten","text":"string = 'A long string' if [[ $string == * \"A long\" * ]] then echo \"'A long' is part of the string\" fi string = 'A long string' if [[ $string ! = * \"A short\" * ]] then echo \"'A short' is not part of the string\" fi","title":"Ist Teilstring in einem String enthalten"},{"location":"samples/bash_variables.html#ausgabe-eines-programms-in-einer-variablen-speichern","text":"issue = ` cat /etc/issue ` echo \" $issue \"","title":"Ausgabe eines Programms in einer Variablen speichern"},{"location":"samples/bash_variables.html#ausgabe-eines-programms-in-einer-variablen-speichern_1","text":"issue = $( cat /etc/issue ) echo \" $issue \"","title":"Ausgabe eines Programms in einer Variablen speichern"},{"location":"samples/bash_variables.html#erstes-zeichen-in-einen-grobuchstaben-umwandeln","text":"echo ${ msg ^ }","title":"Erstes Zeichen in einen Gro\u00dfbuchstaben umwandeln"},{"location":"samples/bash_variables.html#alle-kleinbuchstaben-in-grobuchstaben-umwandeln","text":"echo ${ msg ^^ }","title":"Alle Kleinbuchstaben in Gro\u00dfbuchstaben umwandeln"},{"location":"samples/bash_variables.html#alternative-methode-alle-kleinbuchstaben-in-grobuchstaben-umwandeln","text":"echo $uuid | tr '[:lower:]' '[:upper:]'","title":"Alternative Methode: Alle Kleinbuchstaben in Gro\u00dfbuchstaben umwandeln"},{"location":"samples/bash_variables.html#erstes-zeichen-in-einen-kleinbuchstaben-umwandeln","text":"echo ${ msg , }","title":"Erstes Zeichen in einen Kleinbuchstaben umwandeln"},{"location":"samples/bash_variables.html#alle-grobuchstaben-in-kleinbuchstaben-umwandeln","text":"echo ${ msg ,, }","title":"Alle Gro\u00dfbuchstaben in Kleinbuchstaben umwandeln"},{"location":"samples/bash_variables.html#alternative-methode-alle-grobuchstaben-in-kleinbuchstaben-umwandeln","text":"echo $msg | tr '[:upper:]' '[:lower:]'","title":"Alternative Methode: Alle Gro\u00dfbuchstaben in Kleinbuchstaben umwandeln"},{"location":"samples/bash_variables.html#prufen-ob-eine-variable-eine-positive-zahl-ohne-vorzeichen-enthalt","text":"declare -a inp =( a -1 0 +1 1 ) for n in ${ inp [@] } do if ! [[ \" $n \" = ~ ^ [ 1 -9 ][ 0 -9 ] *$ ]] then echo \" $n - keine positive Zahl Zahl ohne Vorzeichen +\" else echo \" $n - positive Zahl Zahl ohne Vorzeichen +\" fi done Ein Skript, dass alle hier beschriebene Operationen ausf\u00fchrt, findet man hier: bash_variables.bash","title":"Pr\u00fcfen, ob eine Variable eine positive Zahl ohne Vorzeichen + enth\u00e4lt"},{"location":"woche1/index.html","text":"Woche 1 TODO","title":"Woche1"},{"location":"woche1/index.html#woche-1","text":"TODO","title":"Woche 1"},{"location":"woche2/index.html","text":"Woche 2 TODO","title":"Woche2"},{"location":"woche2/index.html#woche-2","text":"TODO","title":"Woche 2"}]}